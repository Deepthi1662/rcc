if (liabilitiesDTO.isPresent()) {
            List<LiabilitiesDTO> liabilitiesDTOS = liabilitiesDTO.get();

            List<CaDetails> caDetailsFromDb = new ArrayList<>();
            List<SaDetails> saDetailsFromDb = new ArrayList<>();

            liabilitiesDTOS.forEach(productDetails -> {
                if(productDetails.getCaDetails() != null) {
                    caDetailsFromDb.add(productDetails.getCaDetails());
                }
                if(productDetails.getSaDetails() != null) {
                    saDetailsFromDb.add(productDetails.getSaDetails());
                }
            });

            updateLiabilities(liabilities, caDetailsFromDb, saDetailsFromDb);
        }


 @Query("SELECT new com.kotak.reliability.entity.LiabilitiesDTO(ca, sa) " +
            "FROM CaDetails ca FULL OUTER JOIN SaDetails sa ON ca.crn = sa.crn " +
            "WHERE ca.crn = :crn OR sa.crn = :crn")
    Optional<List<LiabilitiesDTO>> findLiabilitiesDataByCrn(@Param("crn") String crn);


INSERT INTO rel.sa_details (
    SA_ID, CRN, NUMBER_OF_SA, TOTAL_SA_BAL, ACCOUNT_NUM, PRODUCT_TYPE, PRODUCT_CODE,
    BRANCH_CODE, LOB_CODE, ACCOUNT_OPEN_DATE, CURR_MONTH_BAL, PREV_MONTH_BAL,
    MONTH2_BAL, MONTH3_BAL, FYEND_BAL, LASTFY_BAL, Q1_AQB, Q2_AQB, Q3_AQB, Q4_AQB,
    BCIF_LG, FINCODLOB, BCIF_LC, FLEX_LC, BCIF_RM, FLEX_LG, CREATED_BY, CREATED_ON,
    UPDATED_BY, UPDATED_ON
)
VALUES
    (1, '98251983', 1, 1000000.00, 'ACC123456789', 'SAVINGS', 'SAV01', 'BR001', 'LOB001',
    CURRENT_TIMESTAMP, 500000.00, 450000.00, 480000.00, 490000.00, 510000.00, 470000.00,
    100000.00, 150000.00, 200000.00, 180000.00, 'LG001', 'FIN001', 'LC001', 'FLC001',
    'RM001', 'LG002', 'admin', CURRENT_TIMESTAMP, 'admin', CURRENT_TIMESTAMP),

    (2, '98251983', 2, 2000000.00, 'ACC987654321', 'CURRENT', 'SAV02', 'BR002', 'LOB002',
    CURRENT_TIMESTAMP, 1000000.00, 900000.00, 950000.00, 980000.00, 1000000.00, 940000.00,
    200000.00, 300000.00, 250000.00, 270000.00, 'LG002', 'FIN002', 'LC002', 'FLC002',
    'RM002', 'LG003', 'admin', CURRENT_TIMESTAMP, 'admin', CURRENT_TIMESTAMP);


-- Insert data into ca_details table
INSERT INTO rel.ca_details (
    CA_ID, CRN, NUMBER_OF_CA, TOTAL_CA_BAL, ACCOUNT_NUM, PRODUCT_TYPE, PRODUCT_CODE,
    BRANCH_CODE, LOB_CODE, ACCOUNT_OPEN_DATE, CURR_MONTH_BAL, PREV_MONTH_BAL,
    MONTH2_BAL, MONTH3_BAL, FYEND_BAL, LASTFY_BAL, Q1_AQB, Q2_AQB, Q3_AQB, Q4_AQB,
    BCIF_LG, FINCODLOB, BCIF_LC, FLEX_LC, BCIF_RM, FLEX_LG, CREATED_BY, CREATED_ON,
    UPDATED_BY, UPDATED_ON
)
VALUES
    (1, '98251983', 1, 1200000.00, 'ACC234567890', 'SAVINGS', 'CUR01', 'BR003', 'LOB003',
    CURRENT_TIMESTAMP, 600000.00, 550000.00, 580000.00, 590000.00, 620000.00, 570000.00,
    150000.00, 200000.00, 250000.00, 230000.00, 'LG003', 'FIN003', 'LC003', 'FLC003',
    'RM003', 'LG004', 'admin', CURRENT_TIMESTAMP, 'admin', CURRENT_TIMESTAMP),

    (2, '98251983', 2, 2500000.00, 'ACC765432109', 'CURRENT', 'CUR02', 'BR004', 'LOB004',
    CURRENT_TIMESTAMP, 1100000.00, 950000.00, 1000000.00, 1050000.00, 1100000.00, 980000.00,
    300000.00, 400000.00, 350000.00, 370000.00, 'LG004', 'FIN004', 'LC004', 'FLC004',
    'RM004', 'LG005', 'admin', CURRENT_TIMESTAMP, 'admin', CURRENT_TIMESTAMP);
